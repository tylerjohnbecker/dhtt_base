NodeList:
  - BreadOr
  # - ExistsThen
  - BreadChoppedBreadExists            # BEGIN FIND TOAST # END FIND TOAST
  # - BreadChoppedBreadDefer
  - BreadNewBreadThen                  # BEGIN NEW TOAST
  - BreadMoveToDispenser
  - BreadExecuteDispenser
  - BreadMoveToBread
  - BreadPick
  - BreadMoveToCutboard
  - BreadPlaceCutboard
  - BreadExecuteCutboard
  - BreadChoppedAnd
  - BreadChoppedThenOne
  - BreadChoppedBreadMoveToOne
  - BreadChoppedBreadPickOne
  - BreadChoppedBreadMoveToCounterOne
  - BreadChoppedBreadPlaceCounterOne
  - BreadChoppedThenTwo
  - BreadChoppedBreadMoveToTwo
  - BreadChoppedBreadPickTwo
  - BreadChoppedBreadMoveToCounterTwo
  - BreadChoppedBreadPlaceCounterTwo   # END COUNTER BREAD # END NEW TOAST

Nodes:
  BreadOr:
    type: 3
    behavior_type: 'dhtt_plugins::OrBehavior'
    robot: 0
    parent: 'NONE'
    params: [ ]
  ExistsThen:
    type: 2
    behavior_type: 'dhtt_plugins::ThenBehavior'
    robot: 0
    parent: 'BreadOr'
    params: [ ]
  BreadChoppedBreadExists:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingObjectExistsBehavior'
    robot: 0
    parent: 'BreadOr'
    params: [ 'object: Bread', 'conditions: Chopped', 'mark: $mark' ]
  BreadChoppedBreadDefer:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::DeferBehavior'
    robot: 0
    parent: 'ExistsThen'
    params: [ ]
  BreadNewBreadThen:
    type: 2
    behavior_type: 'dhtt_plugins::ThenBehavior'
    robot: 0
    parent: 'BreadOr'
    params: [ 'enforced_sequential: true' ]
  BreadMoveToDispenser:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: BreadDispenser', 'mark: $mark' ]
  BreadExecuteDispenser:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingExecuteBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: BreadDispenser', 'mark: $mark' ]
  BreadMoveToBread:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: Bread', 'mark: $mark' ]
  BreadPick:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingPickBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: Bread', 'mark: $mark', 'unmark: foo' ]
  BreadMoveToCutboard:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: Cutboard', 'mark: $mark' ]
  BreadPlaceCutboard:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingPlaceBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: Cutboard', 'mark: $mark' ]
  BreadExecuteCutboard:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingExecuteBehavior'
    robot: 0
    parent: 'BreadNewBreadThen'
    params: [ 'object: Bread', 'mark: $mark', 'unmark: foo' ]
  BreadChoppedAnd:
    type: 1
    behavior_type: "dhtt_plugins::ThenBehavior"
    robot: 0
    parent: "BreadNewBreadThen"
    params: [ ]
  BreadChoppedThenOne:
    type: 2
    behavior_type: "dhtt_plugins::ThenBehavior"
    robot: 0
    parent: "BreadChoppedAnd"
    params: [ ]
  BreadChoppedBreadMoveToOne:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadChoppedThenOne'
    params: ['object: Cutboard', 'mark: $mark' ]
  BreadChoppedBreadPickOne:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingPickBehavior'
    robot: 0
    parent: 'BreadChoppedThenOne'
    params: [ 'object: Bread', 'conditions: Chopped', 'mark: $mark' ]
  BreadChoppedBreadMoveToCounterOne:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadChoppedThenOne'
    params: [ 'object: Counter', 'conditions: Free', 'mark: $mark' ]
  BreadChoppedBreadPlaceCounterOne:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingPlaceBehavior'
    robot: 0
    parent: 'BreadChoppedThenOne'
    params: [ 'object: Counter', 'conditions: Free', 'mark: $mark' ]
  BreadChoppedThenTwo:
    type: 2
    behavior_type: "dhtt_plugins::ThenBehavior"
    robot: 0
    parent: "BreadChoppedAnd"
    params: [ ] 
  BreadChoppedBreadMoveToTwo:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadChoppedThenTwo'
    params: [ 'object: Cutboard', 'mark: $mark' ]
  BreadChoppedBreadPickTwo:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingPickBehavior'
    robot: 0
    parent: 'BreadChoppedThenTwo'
    params: [ 'object: Bread', 'conditions: Chopped', 'unmark: foo' ]
  BreadChoppedBreadMoveToCounterTwo:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingMoveBehavior'
    robot: 0
    parent: 'BreadChoppedThenTwo'
    params: [ 'object: Counter', 'conditions: Free' ]
  BreadChoppedBreadPlaceCounterTwo:
    type: 4
    behavior_type: 'dhtt_cooking_plugins::CookingPlaceBehavior'
    robot: 0
    parent: 'BreadChoppedThenTwo'
    params: [ 'object: Counter', 'conditions: Free', 'unmark: foo' ]