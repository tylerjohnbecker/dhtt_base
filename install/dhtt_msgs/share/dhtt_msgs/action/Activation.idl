// generated from rosidl_adapter/resource/action.idl.em
// with input from dhtt_msgs/action/Activation.action
// generated code does not contain a copyright notice

#include "dhtt_msgs/msg/Resource.idl"

module dhtt_msgs {
  module action {
    @verbatim (language="comment", text=
      "## goal" "\n"
      " first pass" "\n"
      " resources that a THEN node will pass down onto the next behavior in line")
    struct Activation_Goal {
      sequence<dhtt_msgs::msg::Resource> passed_resources;

      @verbatim (language="comment", text=
        " second pass" "\n"
        " resources that have been assigned to the active behavior")
      sequence<dhtt_msgs::msg::Resource> granted_resources;

      @verbatim (language="comment", text=
        " success/failure of the request")
      boolean success;
    };
    struct Activation_Result {
      @verbatim (language="comment", text=
        "## result" "\n"
        " first pass" "\n"
        " this is always the name of the direct child of the current node")
      string local_best_node;

      @verbatim (language="comment", text=
        " necessary resources for a behavior to run, and the resources that the behavior already has access to")
      sequence<dhtt_msgs::msg::Resource> requested_resources;

      sequence<dhtt_msgs::msg::Resource> owned_resources;

      @verbatim (language="comment", text=
        " whether or not the node is done or possible (used in first and second pass)")
      boolean done;

      boolean possible;

      @verbatim (language="comment", text=
        " filled in by node class")
      double activation_potential;

      @verbatim (language="comment", text=
        " second pass" "\n"
        " released resources are no longer in use after hitting the root node, passed resources are sent up to the nearest THEN node and then given to their next child")
      sequence<dhtt_msgs::msg::Resource> released_resources;

      sequence<dhtt_msgs::msg::Resource> passed_resources;
    };
    struct Activation_Feedback {
      uint8 structure_needs_at_least_one_member;
    };
  };
};
